// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String        @unique
  password     String
  phoneNumber  String?
  address      Address?
  userProducts UserProduct[]
  createdAt    DateTime?     @default(now())
  updatedAt    DateTime?     @updatedAt
}

model Address {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  street    String
  city      String
  userId    String?   @unique @db.ObjectId
  user      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Product {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  price        Float
  state        String
  deleted      Boolean       @default(false)
  userProducts UserProduct[]
  inventory    Inventory?
  images       Image[]
  createdAt    DateTime?     @default(now())
  updatedAt    DateTime?     @updatedAt
}

model Inventory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  stock     Int
  productId String    @unique @db.ObjectId
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model UserProduct {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  productId String    @db.ObjectId
  deleted   Boolean   @default(false)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Image {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  imageName String
  productId String    @db.ObjectId
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}
